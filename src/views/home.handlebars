<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
</head>
<style>
    /* (A) FIXED WRAPPER */
    .hwrap {
        overflow: hidden; /* HIDE SCROLL BAR */
        background: #eee;
    }

    /* (B) MOVING TICKER WRAPPER */
    .hmove { display: flex; }

    /* (C) ITEMS - INTO A LONG HORIZONTAL ROW */
    .hitem {
        flex-shrink: 0;
        width: 20%;
        box-sizing: border-box;
        padding: 5px;
        text-align: center;
    }

    /* (D) ANIMATION - MOVE ITEMS FROM RIGHT TO LEFT */
    /* 4 ITEMS -400%, CHANGE THIS IF YOU ADD/REMOVE ITEMS */
    @keyframes tickerh {
        0% { transform: translate3d(100%, 0, 0); }
        100% { transform: translate3d(-300%, 0, 0); }
    }
    .hmove { animation: tickerh linear 30s infinite; }
    .hmove:hover { animation-play-state: paused; }

    .greenTriangle {
        display: inline-block;
        vertical-align: middle;
        width: 0;
        height: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-bottom: 20px solid green;
    }
    .redTriangle {
        display: inline-block;
        vertical-align: middle;
        width: 0;
        height: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-top: 20px solid darkred;
    }
</style>
<body onload="loadTicker()">
<br>

<div class="hwrap"><div class="hmove" id="tickerDiv">
</div></div>

<br>

<script>
    var price_data_today;
    var price_data_yesterday;

    async function getPrices() {

        const baseUrl = 'https://z340b62ka1.execute-api.us-east-2.amazonaws.com/get_prices';

        const response = await fetch(baseUrl, {
            method: 'GET',
        }).then(response => response.text())
                .then(data => {
                    price_data_today = new Map(Object.entries(JSON.parse(data)));
                    console.log(price_data_today);
                });
    }

    async function getPreviousDayPrices() {

        const baseUrl = 'https://z340b62ka1.execute-api.us-east-2.amazonaws.com/get_previous_day_prices';

        const response = await fetch(baseUrl, {
            method: 'GET',
        }).then(response => response.text())
                .then(data => {
                    price_data_yesterday = new Map(Object.entries(JSON.parse(data)));
                    console.log(price_data_yesterday);
                });
    }

    async function loadTicker() {
        await getPrices()
        await getPreviousDayPrices()
        var container = document.getElementById("tickerDiv");

        price_data_today.forEach((value, key) => {
            var differential;
            var newDiv = document.createElement("div");
            newDiv.className = "hitem";
            var triangleDiv = document.createElement("triangle");

            if (parseFloat(price_data_today.get(key)) >= parseFloat(price_data_yesterday.get(key))) {
                triangleDiv.className = "greenTriangle";
                differential = parseFloat(price_data_today.get(key)) - parseFloat(price_data_yesterday.get(key));
                newDiv.textContent = `${key}: ${parseFloat(value).toFixed(2)} (+${differential.toFixed(2)})`;
                newDiv.appendChild(triangleDiv)
                container.appendChild(newDiv);
            }
            else if (parseFloat(price_data_today.get(key)) < parseFloat(price_data_yesterday.get(key))) {
                triangleDiv.className = "redTriangle";
                differential = parseFloat(price_data_yesterday.get(key)) - parseFloat(price_data_today.get(key));
                newDiv.textContent = `${key}: ${parseFloat(value).toFixed(2)} (-${differential.toFixed(2)})`;
                newDiv.appendChild(triangleDiv)
                container.appendChild(newDiv);
            }

        });
    }

</script>
</body>
</html>